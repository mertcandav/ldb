// Copyright 2025 mertcandav.
// Use of this source code is governed by a BSD 3-Clause
// license that can be found in the LICENSE file.

use "std/bytes"
use "std/errors"

// LDB data representation scanner.
// Scans collection data and returns token-by-token.
// The nil token is EOF.
struct scanner {
	data: []byte // Data.
	i:    int    // Last position.
}

impl scanner {
	fn new(mut data: []byte): scanner {
		ret scanner{data: data, i: 0}
	}

	fn scan(mut self): []byte {
		i := bytes::IndexByte(self.data[self.i:], _EOF)
		if i == -1 {
			panic("ldb: corrupted database")
		}
		end := self.i + i
		mut data := self.data[self.i:end]
		if len(data) == 0 { // EOF
			ret nil
		}
		self.i = end + 1 // advance to zero byte
		ret data
	}
}